name: Image and sdk deploy

on:
  push:
    branches:
      - master
      - development

jobs:
  build:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Gradle dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Launcher with Gradle
        run: ./gradlew :launcher:build

      - name: Login to GHCR
        env:
          DOCKER_USERNAME: httpmarco
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USERNAME --password-stdin

      - name: Set Docker tags
        id: vars
        run: |
          if [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            echo "TAG=ghcr.io/httpmarco/polocloud:master" >> $GITHUB_ENV
            echo "LATEST=ghcr.io/httpmarco/polocloud:latest" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "development" ]]; then
            echo "TAG=ghcr.io/httpmarco/polocloud:development" >> $GITHUB_ENV
          fi

      - name: Build & Tag
        run: |
          if [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            docker build -f docker/Dockerfile \
              -t $TAG \
              -t $LATEST .
          else
            docker build -f docker/Dockerfile -t $TAG .
          fi

      - name: Push Images to GHCR
        run: |
          docker push $TAG
          if [[ "${GITHUB_REF_NAME}" == "master" ]]; then
            docker push $LATEST
          fi

      - name: Publish java sdk to Sonatype
        env:
          ossrhUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ossrhPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        run: ./gradlew :sdk:sdk-java:publish
